hooks:
  lib:
    func_hook:
    - {entry: '0xd040', leave: '0xd044', target: '0x1000', mode: 'skip'}  # fclose  
    - {entry: '0xd058', leave: '0xd05c', target: '0x1000', mode: 'skip'}  # flock
    - {entry: '0xd060', leave: '0xd064', target: '0x1000', mode: 'skip'}  # close
    - {entry: '0xd074', leave: '0xd078', target: '0x1000', mode: 'skip'}  # popen
    - {entry: '0xd0c0', leave: '0xd0c4', target: '0x1000', mode: 'skip'}  # snprintf
    - {entry: '0xd0c8', leave: '0xd0cc', target: '0x1000', mode: 'skip'}  # FUN_0000cb10
    - {entry: '0xd0d0', leave: '0xd0d4', target: '0x1000', mode: 'skip'}  # pclose
    - {entry: '0xd104', leave: '0xd108', target: '0x1000', mode: 'skip'}  # log
    - {entry: '0xd11c', leave: '0xd120', target: '0x1000', mode: 'skip'}  # snprintf
    - {entry: '0xd124', leave: '0xd128', target: '0x1000', mode: 'skip'}  # log
    - {entry: '0xd13c', leave: '0xd140', target: '0x1000', mode: 'skip'}  # snprintf
    - {entry: '0xd144', leave: '0xd148', target: '0x1000', mode: 'skip'}  # log
    - {entry: '0xc9bc', leave: '0xc9c0', target: '0x1000', mode: 'skip'}  # system
    - {entry: '0xc9c4', leave: '0xc9c8', target: '0x1000', mode: 'skip'}  # free
  libc:
    fgets:
    - {entry: '0xcfe0', leave: '0xcfe4', target: '0x1000', mode: 'model'}
    - {entry: '0xd094', leave: '0xd098', target: '0x1000', mode: 'model'}
    sscanf:
    - {entry: '0xcffc', leave: '0xd000', target: '0x1000', mode: 'model'}
    strcmp:
    - {entry: '0xd010', leave: '0xd014', target: '0x1000', mode: 'skip'}
    - {entry: '0xd0e8', leave: '0xd0ec', target: '0x1000', mode: 'skip'}
states:
  entry:
    mems:
      '0x000120f8': ['0x25']  # '%'
      '0x000120f9': ['0x73']  # 's'
      '0x000120fa': ['0x20']  # ' '
      '0x000120fb': ['0x25']  # '%'
      '0x000120fc': ['0x73']  # 's'
      '0x000120fd': ['0x00']  #
      # TODO: Test ROP Chain
      '0xbeffc904': ['0x54']
      '0xbeffc905': ['0x79']
      '0xbeffc906': ['0xff']
      '0xbeffc907': ['0xff']
# TODO: Test ROP Chain
ropchain_test:
# Gadget 0
- preconditions:
    regs:
    mems:
      '0xbeffc88c': '0x78'  # [sp+8*4] == 0xec78
      '0xbeffc88d': '0xec'
      '0xbeffc88e': '0x00'
      '0xbeffc88f': '0x00'
  instructions:
  - ['0x0000cf24', f0 8f bd e8, 'pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}', '']
# Gadget 1
- preconditions:
    regs:
      sp: '0xbeffc890'
  instructions:
  - ['0x0000ec78', 84 20 9d e5, 'ldr r2, [sp, #132]', '']
  - ['0x0000ec7c', 02 00 84 e0, 'add r0, r4, r2', '']
- preconditions:
    regs:
      r0: '0xbeffc126'
      r2: '0xffff7954'
  instructions:
  - ['0x0000ec80', 06 ea ff eb, 'bl 94a0', '']
# Simple ROP Chain (crashing)
ropchain_simple:
# Gadget 0
- preconditions:
    regs:
    mems:
      '0xbeffc874': '0x90'  # [sp+2*4] == cmd_ptr
      '0xbeffc875': '0xc2'
      '0xbeffc876': '0xff'
      '0xbeffc877': '0xbe'
      '0xbeffc88c': '0xb8'  # [sp+8*4] == 0xc9b8
      '0xbeffc88d': '0xc9'
      '0xbeffc88e': '0x00'
      '0xbeffc88f': '0x00'
  instructions:
  - ['0x0000cf24', f0 8f bd e8, 'pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}', '']
# Gadget 1
- preconditions:
    regs:
    mems:
      '0xbeffc290': '0x69'  # 'i'
      '0xbeffc291': '0x64'  # 'd'
      '0xbeffc292': '0x20'  # ' '
      '0xbeffc293': '0x3e'  # '>'
      '0xbeffc294': '0x20'  # ' '
      '0xbeffc295': '0x2f'  # '/'
      '0xbeffc296': '0x69'  # 'i'
      '0xbeffc297': '0x64'  # 'd'
      '0xbeffc298': '0x3b'  # ';'
      '0xbeffc299': '0x23'  # '#'
      '0xbeffc29a': '0x00'  #
  instructions:
  - ['0x0000c9b8', '06 00 a0 e1', 'mov r0, r6', '']
  - ['0x0000c9bc', 'b7 f2 ff eb', 'bl #0x94a0', '']
# Advanced ROP Chain (non-crashing)
ropchain_advanced:
# Gadget 0
- preconditions:
    regs:
    mems:
      '0xbeffc898': '0xc9'  # [sp+7*4] == buf0+10*4
      '0xbeffc899': '0xc2'
      '0xbeffc89a': '0xff'
      '0xbeffc89b': '0xbe'
      '0xbeffc89c': '0x28'  # [sp+8*4] == 0x9428
      '0xbeffc89d': '0x94'
      '0xbeffc89e': '0x00'
      '0xbeffc89f': '0x00'
  instructions:
  - ["0x0000cf24", "f0 8f bd e8", "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}", ""]
# Gadget 1
- preconditions:
    regs:
    mems:
      '0xbeffc8a4': '0x36'  # [sp+1*4] == cmd
      '0xbeffc8a5': '0xc1'
      '0xbeffc8a6': '0xff'
      '0xbeffc8a7': '0xbe'
      '0xbeffc8bc': '0xf1'  # [sp+7*4] == buf1+10*4
      '0xbeffc8bd': '0xc2'
      '0xbeffc8be': '0xff'
      '0xbeffc8bf': '0xbe'
      '0xbeffc8c0': '0xe3'  # [sp+8*4] == buf2
      '0xbeffc8c1': '0xc4'
      '0xbeffc8c2': '0xff'
      '0xbeffc8c3': '0xbe'
      '0xbeffc8c4': '0xb8'  # [sp+9*4] == 0x9eb8
      '0xbeffc8c5': '0x9e'
      '0xbeffc8c6': '0x00'
      '0xbeffc8c7': '0x00'
  instructions:
  - ["0x00009428", "f0 af 1b e9", "ldmdb r11, {r4, r5, r6, r7, r8, r9, r10, r11, sp, pc}", ""]
# Gadget 2
- predonditions:
    regs:
    mems:
      '0xbeffc8e4': '0x7c'  # [sp+7*4] == 0x997c
      '0xbeffc8e5': '0x99'
      '0xbeffc8e6': '0x00'
      '0xbeffc8e7': '0x00'
  instructions:
  - ["0x00009eb8", "05 00 a0 e1", "mov r0, r5", ""]
  - ["0x00009ebc", "f0 87 bd e8", "pop {r4, r5, r6, r7, r8, r9, r10, pc}", ""]
# Gadget 3
- preconditions:
    regs:
    mems:
      '0xbeffc8e8': '0xa0'  # [sp+0*4] == libc_system
      '0xbeffc8e9': '0x94'
      '0xbeffc8ea': '0x00'
      '0xbeffc8eb': '0x00'
      '0xbeffc8ec': '0x84'  # [sp+1*4] == 0x9984
      '0xbeffc8ed': '0x99'
      '0xbeffc8ee': '0x00'
      '0xbeffc8ef': '0x00'
  instructions:
  - ["0x0000997c", "00 00 53 e3", "cmp r3, #0", ""]
  - ["0x00009980", "08 80 bd 08", "popeq {r3, pc}", ""]
# Gadget 4
- preconditions:
    regs:
    mems:
      '0xbeffc944': '0x28'  # [sp+1*4] == 0x9428
      '0xbeffc945': '0x94'
      '0xbeffc946': '0x00'
      '0xbeffc947': '0x00'
  instructions:
  - ["0x00009984", "33 ff 2f e1", "blx r3", ""]
  - ["0x00009988", "08 80 bd e8", "pop {r3, pc}", ""]
# Gadget 5
- preconditions:
    regs:
    mems:
      '0xbeffc948': '0x50'  # [sp+0*4] == 0x1bb850
      '0xbeffc949': '0xb8'
      '0xbeffc94a': '0x1b'
      '0xbeffc94b': '0x00'
      '0xbeffc94c': '0xc0'  # [sp+1*4] == 0xbeffe9c0
      '0xbeffc94d': '0xe9'
      '0xbeffc94e': '0xff'
      '0xbeffc94f': '0xbe'
      '0xbeffc950': '0x32'  # [sp+2*4] == 0x64ae6532
      '0xbeffc951': '0x65'
      '0xbeffc952': '0xae'
      '0xbeffc953': '0x64'
      '0xbeffc954': '0xc0'  # [sp+3*4] == 0xbeffedc0
      '0xbeffc955': '0xed'
      '0xbeffc956': '0xff'
      '0xbeffc957': '0xbe'
      '0xbeffc958': '0x32'  # [sp+4*4] == 0x64ae6532
      '0xbeffc959': '0x65'
      '0xbeffc95a': '0xae'
      '0xbeffc95b': '0x64'
      '0xbeffc95c': '0xc0'  # [sp+5*4] == 0xbeffe5c0
      '0xbeffc95d': '0xe5'
      '0xbeffc95e': '0xff'
      '0xbeffc95f': '0xbe'
      '0xbeffc960': '0xe0'  # [sp+6*4] == 0x021ae0
      '0xbeffc961': '0x1a'
      '0xbeffc962': '0x02'
      '0xbeffc963': '0x00'
      '0xbeffc964': '0xc0'  # [sp+7*4] == 0xbeffddc0
      '0xbeffc965': '0xdd'
      '0xbeffc966': '0xff'
      '0xbeffc967': '0xbe'
      '0xbeffc968': '0xa0'  # [sp+8*4] == 0xbeffc8a0
      '0xbeffc969': '0xc8'
      '0xbeffc96a': '0xff'
      '0xbeffc96b': '0xbe'
      '0xbeffc96c': '0xa4'  # [sp+9*4] == 0xf1a4
      '0xbeffc96d': '0xf1'
      '0xbeffc96e': '0x00'
      '0xbeffc96f': '0x00'
  instructions:
  - ["0x00009428", "f0 af 1b e9", "ldmdb r11, {r4, r5, r6, r7, r8, r9, r10, r11, sp, pc}", ""]